# Render Blueprint Configuration
# Customer AI Driven Feedback Analyzer v3.1.0

services:
  # FastAPI Backend Service
  - type: web
    name: feedback-analyzer-api
    runtime: python
    region: oregon
    plan: standard
    buildCommand: cd api && bash build.sh
    startCommand: cd api && bash start.sh
    envVars:
      - key: PYTHON_VERSION
        value: 3.11
      - key: OPENAI_API_KEY
        sync: false
      - key: AI_MODEL
        value: gpt-4o-mini
      - key: REDIS_URL
        fromService:
          type: redis
          name: feedback-analyzer-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: feedback-analyzer-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: feedback-analyzer-redis
          property: connectionString
      - key: MAX_FILE_SIZE_MB
        value: 10
      - key: ALLOWED_EXTENSIONS
        value: "csv,xlsx,xls"
      - key: MAX_BATCH_SIZE
        value: 50
      - key: MAX_RPS
        value: 8
      - key: TASK_EXPIRY_SECONDS
        value: 3600
      - key: API_WORKERS
        value: 1
      - key: LOG_LEVEL
        value: info
    healthCheckPath: /api/health
    autoDeploy: true

  # Celery Worker Service
  - type: worker
    name: feedback-analyzer-worker
    runtime: python
    region: oregon
    plan: standard
    buildCommand: cd api && bash build-worker.sh
    startCommand: cd api && bash start-worker.sh
    envVars:
      - key: PYTHON_VERSION
        value: 3.11
      - key: OPENAI_API_KEY
        sync: false
      - key: AI_MODEL
        value: gpt-4o-mini
      - key: REDIS_URL
        fromService:
          type: redis
          name: feedback-analyzer-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: feedback-analyzer-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: feedback-analyzer-redis
          property: connectionString
      - key: MAX_BATCH_SIZE
        value: 50
      - key: MAX_RPS
        value: 8
      - key: CELERY_WORKER_CONCURRENCY
        value: 2
      - key: CELERY_MAX_TASKS_PER_CHILD
        value: 100
      - key: CELERY_LOG_LEVEL
        value: info
    autoDeploy: true

  # BFF/Frontend Service
  - type: web
    name: feedback-analyzer-web
    runtime: node
    region: oregon
    plan: standard
    buildCommand: cd web && bash build.sh
    startCommand: cd web && bash start.sh
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: NODE_ENV
        value: production
      - key: API_PROXY_TARGET
        fromService:
          type: web
          name: feedback-analyzer-api
          envVarKey: RENDER_INTERNAL_URL
      - key: PORT
        value: 3000
    routes:
      - type: rewrite
        source: /api/*
        destination: /*
    healthCheckPath: /health
    autoDeploy: true

# Redis Database
databases:
  - name: feedback-analyzer-redis
    type: redis
    region: oregon
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []